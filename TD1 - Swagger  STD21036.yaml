openapi: 3.0.1
info:
  title: STD21036
  description: >-
    Hello world
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HEINYKOLOINA2/std-21036/1.0.0
  - url: https://std21036.com
  - url: http://std21036.com
tags:
  - name: students
    description: Everything about our students
  - name: courses
    description: Everything about our courses
paths:
  /students:
    post:
      tags:
        - students
      summary: Add a new student
      operationId: addStudent
      requestBody:
        description: Student object that needs to be added to the API
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Students'
      responses:
        '200':
          description: Good input
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Students'
        '400':
          description: Bad input
                
      
    get:
      tags:
        - students
      summary: Finds Students
      description: Show students lists
      operationId: findStudents
      parameters:
        - name: page
          in: query
          description: Status values that need to be considered for filter
          required: true
          schema:
            type: integer
            items:
              type: integer
              default: 1
              enum:
                - 1
                - 2
        - name: page_size
          in: query
          description: Status values that need to be considered for filter
          required: true
          schema:
            type: integer
            items:
              type: integer
              default: 1
              enum:
                - 1
                - 2
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
  /students/{id}:
    delete:
      tags:
       - students
      summary: Delete a student by Id
      description: Get the id in the queryElement and delete it
      operationId: deleteStudent
      parameters:
        - name: id
          in: path
          description: Get the student by Id
          required: true
          style: simple
          explode: true
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: Student deleted successful
        '400':
          description: Incorrect Id
          
    put:
      tags:
       - students
      summary: "change student information"
      description: "Update or create a new student"
      parameters:
        - name: id
          in: path
          description: Get the student by Id
          required: true
          style: simple
          explode: true
          schema:
            type: integer
            default: 1
        - name: firstname
          in: query
          description: Put the first name
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: "john"
        - name: lastname
          in: query
          description: Put the last name
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: "drake"
      responses:
        '200':
          description: Student created/updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Students'
        '400':
          description: Error, some imput might be wrong
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref : '#/components/schemas/Students'
    patch:
      tags:
       - students
      summary: "Change an information about a student"
      description: 'Update an information about a student'
      parameters: 
        - name: id
          in: path
          description: Get the student by Id
          required: true
          style: simple
          explode: true
          schema:
            type: integer
            default: 1
        - name: firstname
          in: query
          description: "Update the firstname of the student"
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: "Hitomi"
        - name: lastname
          in: query
          description: "Update the lastname of the student"
          required: false
          style: form
          explode: true
          schema:
            type: string
            default: "MacCarty"
      responses:
        '200':
          description: "Student updated"
          content: 
            application/json:
              schema:
                type: array
                items: 
                  $ref : '#/components/schemas/Students'
        '400':
          description:  "Missing parameters"
                  
  /courses:
    get:
      tags:
        - courses
      summary: Get the list of courses
      operationId: getCourses
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
        - name: page_size
          in: query
          required: true
          schema:
            type: integer
        
      responses:
       '200':
          description: List courses
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/GoodRequest'
       '400':
          description: Bad request
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/BadRequest'
        
    post:
      tags:
        - courses
      summary: Create new courses
      operationId: postCourses
      requestBody:
        description: Body of the request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesPost'
      responses:
        '200':
          description: Added to the list course
        '400':
          description: Error with the input

        
  /courses/{id}:
    get:
      tags:
        - courses
      summary: Specified courses
      operationId: getCoursesById
      parameters:
        - name: id
          in: path
          description: Id of the course
          required: true
          schema:
            type: integer
      responses:
       '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoodRequest'
       '400':
          description: Bad request
          
components:
  schemas:
    Students:
      type: object
      properties:
        id:
          type: integer
          example: 1
        Lastname:
          type: string
          example: john
        Firstname:
         type: string
         example: Mccol
         
    BadRequest:
      type: object
      properties:
        code:
          type: string
          example: 400_BAD_REQUEST
        message:
          type: string
          example: Parameter are missing
          
    GoodRequest:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "math" 
        teacher:
          type: string
          example: "jean"
        createdDatetime:
          type: string
          example: "2022/07/13"
          
    CoursesPost:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "just"
        teacher:
          type: string
          example: "jinx" 
        createdDatetime:
          type: string
          example: "2022/07/13"